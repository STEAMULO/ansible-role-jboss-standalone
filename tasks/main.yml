---

# Users work
  - name: Add group {{ jbossUser }}
    group: name="{{ jbossUser }}"

  - name: Create user {{ jbossUser }} and add to {{ jbossUser }} group
    user: name="{{ jbossUser }}" group="{{ jbossUser }}"
    become: True

  - name: Add {{ ssh_account }} to {{ jbossUser }} group
    user: name="{{ ssh_account }}" groups="{{ jbossUser }}" append=yes

# Download Jboss package

  - name: Ensure unzip is installed
    apt: pkg=unzip state=present

  - set_fact: jbossExtractFolder="/opt/{{ (jbossZip | basename | splitext)[0] }}"

  - name: Ensure dir "{{ jbossExtractFolder }}" exists
    file: path="{{ jbossExtractFolder }}" state=directory owner="{{ jbossUser }}" group="{{ jbossUser }}" recurse=yes

  - name: Download JBoss from "{{ jbossZip }}" and unzip archive to "{{ jbossExtractFolder }}" si "{{ jbossExtractFolder }}/standalone/configuration/standalone.xml" inexistant
    unarchive: src="{{ jbossZip }}" dest="{{ jbossExtractFolder }}" remote_src=yes copy=no creates="{{ jbossExtractFolder }}/standalone/configuration/standalone.xml"

# Install Jboss package

  - name: Symlink install directory {{ jbossExtractFolder }} to {{ jbossBase }}
    file: src="{{ jbossExtractFolder }}" path="{{ jbossBase }}" state=link

  - name: Change ownership and rights of JBoss installation in {{ jbossBase }}
    file: path="{{ jbossBase }}{{ item.path }}" owner="{{ jbossUser }}" group="{{ jbossUser }}" state=directory mode="{{ item.mode }}" recurse=yes
    with_items:
      - { path: '/', mode: 770 }
      - { path: '/log', mode: 775 }
    become: True

# Configure Jboss server and service

  - name: Create /var/run/{{ jbossServiceName }} for pid file
    file: path="{{ jbossServiceName }}" state=directory owner="{{ jbossUser }}" group="{{ jbossUser }}" recurse=yes
    become: True

  - name: Copying standalone.xml configuration file into {{ jbossBase }}/standalone/configuration/
    template: src=standalone.xml dest="{{ jbossBase }}/standalone/configuration/"
    notify: restart jboss

  - name: Copy the init script
    template: src=jboss-as-standalone.sh dest=/etc/init.d/{{ jbossServiceName }} mode=0755
    notify: restart jboss

  - name: Creating Admin User
    command: "{{ jbossBase }}/bin/add-user.sh --silent=true {{ jbossAdminUsername }} {{ jbossAdminPassword }} 1>/dev/null"

  - name: Set JBOSS service as disabled ans stopped (at boot)
    service: name="{{ jbossServiceName }}" enabled=no

